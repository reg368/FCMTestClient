<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hyweb.gip.dao.CodeMainMapper" >
  <resultMap id="BaseResultMap" type="hyweb.gip.pojo.mybatis.table.CodeMain" >
    <id column="codeSeq" property="codeseq" jdbcType="INTEGER" />
    <result column="codeId" property="codeid" jdbcType="NVARCHAR" />
    <result column="codeValue" property="codevalue" jdbcType="NVARCHAR" />
    <result column="codeShow" property="codeshow" jdbcType="NVARCHAR" />
    <result column="showValue" property="showvalue" jdbcType="NVARCHAR" />
    <result column="codeSort" property="codesort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    codeSeq, codeId, codeValue, codeShow, codeSort
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from BaphiqCodeMain
    where codeSeq = #{codeseq,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from BaphiqCodeMain
    where codeSeq = #{codeseq,jdbcType=INTEGER}
    
    delete from BaphiqCodeShowEtc
    where codeId = #{codeseq,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="hyweb.gip.pojo.mybatis.table.CodeMain" >
    insert into BaphiqCodeMain (codeId, codeValue, 
      codeShow, codeSort)
    values (#{codeid,jdbcType=NVARCHAR}, #{codevalue,jdbcType=NVARCHAR}, 
      #{codeshow,jdbcType=NVARCHAR}, #{codesort,jdbcType=INTEGER})  
    
    insert into Baphiqcodeshowetc (codeid, showvalue) 
    values ((SELECT SCOPE_IDENTITY()), #{showvalue,jdbcType=NVARCHAR})  
  </insert>

    <!--insert id="insert" parameterType="hyweb.gip.pojo.mybatis.table.CodeMain" >
    insert into CodeMain (codeId, codeValue, 
      codeShow, codeSort)
    values (#{codeid,jdbcType=NVARCHAR}, #{codevalue,jdbcType=NVARCHAR}, 
      #{codeshow,jdbcType=NVARCHAR}, #{codesort,jdbcType=INTEGER})  
  </insert-->
  
  <update id="updateByPrimaryKey" parameterType="hyweb.gip.pojo.mybatis.table.CodeMain" >
    update BaphiqCodeMain
    set codeId = #{codeid,jdbcType=NVARCHAR},
      codeValue = #{codevalue,jdbcType=NVARCHAR},
      codeShow = #{codeshow,jdbcType=NVARCHAR},
      codeSort = #{codesort,jdbcType=INTEGER}
    where codeSeq = #{codeseq,jdbcType=INTEGER}  
    
    delete from BaphiqCodeShowEtc 
    where codeId = #{codeseq,jdbcType=INTEGER}
    
    insert into BaphiqCodeShowEtc (codeid, showvalue) 
    values (#{codeseq,jdbcType=INTEGER}, #{showvalue,jdbcType=NVARCHAR}) 
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BaphiqCodeMain order by codeSort
  </select>
  <select id="selectShowValueByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select codeId, item as showValue
    from BaphiqCodeShowEtc 
    cross apply dbo.SplitStrings(showvalue, ',')
    where codeid = #{codeseq,jdbcType=INTEGER}
  </select>
  <select id="selectByCodeId" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select
  	<include refid="Base_Column_List" />
  	from Baphiqcodemain 
  	where codeid = #{codeid,jdbcType=NVARCHAR} order by codeSort
  </select>
  <select id="selectForRef" resultMap="BaseResultMap" parameterType="map">
  	select
  	<include refid="Base_Column_List" /> 
  	from Baphiqcodemain 
  	where codeid = #{codeid,jdbcType=NVARCHAR} 
  	and codevalue = #{codevalue,jdbcType=NVARCHAR}
  </select>
  <select id="list" resultMap="BaseResultMap" parameterType="map">
  	select * from (
		select row_number() over (order by codeSort) as row_num, 
		<include refid="Base_Column_List" /> 
		from BaphiqCodeMain 
	) as tb 
	where row_num between ((${page} - 1) * ${showNum} + 1) and (${page}*${showNum}) 
  </select>
  <select id="countAll" resultType="int">
    select count(*) 
    from BaphiqCodeMain 
  </select>
  <select id="listByCodeId" resultMap="BaseResultMap" parameterType="map">
  	select * from (
		select row_number() over (order by codeSort) as row_num, 
		<include refid="Base_Column_List" /> 
		from Baphiqcodemain where codeid = ${codeid} 
	) as tb 
	where row_num between ((${page} - 1) * ${showNum} + 1) and (${page} * ${showNum}) 
  </select>
  <select id="countByCodeId" resultType="int" parameterType="map">
    select count(*) 
    from BaphiqCodeMain 
    where codeid = ${codeid}
  </select>
  <select id="getCodeShowBySub" resultType="String" parameterType="map">
    select distinct codeshow from Baphiqcodemain a 
	join Baphiqcoderef b on a.codeid = b.subCodeValue 
	where b.refvalue = '${refvalue}' and a.codevalue = '${codevalue}'
  </select>
  <select id="getAlert" resultType="String" parameterType="map">
    select codeShow 
    from BaphiqCodeMain 
    where codeId = '${codeid}' and codeValue = '${codevalue}'
  </select>
  <select id="getInAlert" resultType="String" parameterType="map">
    select codeShow 
    from BaphiqCodeMain 
    where codeId = '${codeid}' and codeValue IN(${codevalue})
  </select>
</mapper>