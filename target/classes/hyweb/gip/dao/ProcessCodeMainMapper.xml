<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hyweb.gip.dao.ProcessCodeMainMapper" >
  <resultMap id="BaseResultMap" type="hyweb.gip.pojo.mybatis.table.ProcessCodeMain" >
    <id column="codeSeq" property="codeseq" jdbcType="INTEGER" />
    <result column="codeParent" property="codeparent" jdbcType="INTEGER" />
    <result column="codeValue" property="codevalue" jdbcType="NVARCHAR" />
    <result column="codeShow" property="codeshow" jdbcType="NVARCHAR" />
    <result column="codeSort" property="codesort" jdbcType="INTEGER" />
    <result column="deptId" property="deptid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    codeSeq, codeParent, codeValue, codeShow, codeSort, deptId
  </sql>
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from BaphiqProcessCodeMain
    where codeSeq = #{codeseq,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from BaphiqProcessCodeMain
    where codeSeq = #{codeseq,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="hyweb.gip.pojo.mybatis.table.ProcessCodeMain" >
    insert into BaphiqProcessCodeMain ( codeParent, codeValue, 
      codeShow, codeSort, deptId
      )
    values ( #{codeparent,jdbcType=INTEGER}, #{codevalue,jdbcType=NVARCHAR}, 
      #{codeshow,jdbcType=NVARCHAR}, #{codesort,jdbcType=INTEGER}, #{deptid,jdbcType=INTEGER}
      )
  </insert>
  <update id="update" parameterType="hyweb.gip.pojo.mybatis.table.ProcessCodeMain" >
    update BaphiqProcessCodeMain
    set codeParent = #{codeparent,jdbcType=INTEGER},
      codeValue = #{codevalue,jdbcType=NVARCHAR},
      codeShow = #{codeshow,jdbcType=NVARCHAR},
      codeSort = #{codesort,jdbcType=INTEGER},
      deptId = #{deptid,jdbcType=INTEGER}
    where codeSeq = #{codeseq,jdbcType=INTEGER}
  </update>
  <select id="getAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BaphiqProcessCodeMain
  </select>
    <select id="query" resultMap="BaseResultMap">
  	select * from (
		select row_number() over (order by ${orderby}, codeSeq asc) as row_num, ${select} from BaphiqProcessCodeMain
		where  ${where}  
	) as tb 
	where row_num between ((${page} - 1) * ${showNum} + 1) and (${page}*${showNum}) 
  </select>
  <select id="count" resultType="int">
    select count(*) 
    from BaphiqProcessCodeMain 
    where ${where} 
  </select>
  <select id="getPath" statementType="CALLABLE" resultType="String" parameterType="map">
    {CALL sp_getBaphiqAllXPath(${codamainid})}
  </select>
</mapper>