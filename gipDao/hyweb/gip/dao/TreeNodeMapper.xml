<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hyweb.gip.dao.TreeNodeMapper" >
  <resultMap id="BaseResultMap" type="hyweb.gip.pojo.mybatis.table.TreeNode" >
    <id column="tnId" property="tnid" jdbcType="BIGINT" />
    <result column="tId" property="tid" jdbcType="INTEGER" />
    <result column="tnName" property="tnname" jdbcType="NVARCHAR" />
    <result column="tnDesc" property="tndesc" jdbcType="NVARCHAR" />
    <result column="tnPic" property="tnpic" jdbcType="NVARCHAR" />
    <result column="tnSort" property="tnsort" jdbcType="INTEGER" />
    <result column="tnIsPublic" property="tnispublic" jdbcType="NVARCHAR" />
    <result column="tnType" property="tntype" jdbcType="NVARCHAR" />
    <result column="tnDataSource" property="tndatasource" jdbcType="NVARCHAR" />
    <result column="tnXpath" property="tnxpath" jdbcType="NVARCHAR" />
    <result column="tnLevel" property="tnlevel" jdbcType="INTEGER" />
    <result column="parent" property="parent" jdbcType="BIGINT" />
    <result column="tnUrl" property="tnurl" jdbcType="NVARCHAR" />
    <result column="tnKeyword" property="tnkeyword" jdbcType="NVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    tnId, tId, tnName, tnDesc, tnPic, tnSort, tnIsPublic, tnType, tnDataSource, tnXpath, tnLevel, parent, tnUrl, tnKeyword
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from TreeNode
    where tnId = #{tnid,jdbcType=BIGINT}
  </select>
  <select id="selectByCheckSiteId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from TreeNode t JOIN XdmpList x on t.tid = x.rootid
    where tnId = #{tnid,jdbcType=BIGINT} and xdmpid = #{siteId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from TreeNode
    where tnXpath like '%${tnid}%'
  </delete>
  <insert id="insert" parameterType="hyweb.gip.pojo.mybatis.table.TreeNode" >
    insert into TreeNode (tnId, tId, tnName, tnDesc, tnPic, tnSort, tnIsPublic, tnType, tnDataSource, tnXpath, tnLevel, parent, tnUrl, tnKeyword)
    values (#{tnid,jdbcType=BIGINT}, #{tid,jdbcType=INTEGER}, #{tnname,jdbcType=NVARCHAR}, 
      #{tndesc,jdbcType=NVARCHAR}, #{tnpic,jdbcType=NVARCHAR}, #{tnsort,jdbcType=INTEGER}, #{tnispublic,jdbcType=NVARCHAR},
      #{tntype,jdbcType=NVARCHAR}, #{tndatasource,jdbcType=NVARCHAR}, #{tnxpath,jdbcType=NVARCHAR}, #{tnlevel,jdbcType=INTEGER},
      #{parent,jdbcType=BIGINT}, #{tnurl,jdbcType=NVARCHAR}, #{tnkeyword,jdbcType=NVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="hyweb.gip.pojo.mybatis.table.TreeNode" >
    update TreeNode
    set tId = #{tid,jdbcType=INTEGER},
      tnName = #{tnname,jdbcType=NVARCHAR},
      tnDesc = #{tndesc,jdbcType=NVARCHAR},
      tnPic = #{tnpic,jdbcType=NVARCHAR},
      tnSort = #{tnsort,jdbcType=INTEGER},
      tnIsPublic = #{tnispublic,jdbcType=NVARCHAR},
      tnType = #{tntype,jdbcType=NVARCHAR},
      tnDataSource = #{tndatasource,jdbcType=NVARCHAR},
      tnXpath = #{tnxpath,jdbcType=NVARCHAR},
      tnLevel = #{tnlevel,jdbcType=INTEGER},
      parent = #{parent,jdbcType=BIGINT},
      tnUrl = #{tnurl,jdbcType=NVARCHAR},
      tnKeyword = #{tnkeyword,jdbcType=NVARCHAR}
    where tnId = #{tnid,jdbcType=BIGINT}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from TreeNode order by tnSort
  </select>
  <insert id="insertTest" parameterType="map" >
    insert into TreeNode (tId, tnName, tnDesc, tnPic, tnSort, tnIsPublic, tnType, tnDataSource, tnXpath, tnLevel, parent, tnUrl, tnKeyword)
    values (#{tid,jdbcType=INTEGER}, #{tnname,jdbcType=NVARCHAR}, 
      #{tndesc,jdbcType=NVARCHAR}, #{tnpic,jdbcType=NVARCHAR}, #{tnsort,jdbcType=INTEGER}, #{tnispublic,jdbcType=NVARCHAR},
      #{tntype,jdbcType=NVARCHAR}, #{tndatasource,jdbcType=NVARCHAR}, #{tnxpath,jdbcType=NVARCHAR}, #{tnlevel,jdbcType=INTEGER},
      #{parent,jdbcType=BIGINT}, #{tnurl,jdbcType=NVARCHAR}, #{tnkeyword,jdbcType=NVARCHAR})
  </insert>
  <select id="selectByLevel" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from TreeNode
    where tId = #{tid,jdbcType=INTEGER} and tnLevel &lt;= #{tnlevel,jdbcType=INTEGER} and tnIsPublic = '1'
    order by tnSort,tnid
  </select>
  <select id="selectChild" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from TreeNode
    where tnXpath like '${tnid}.%-' and tnIsPublic = '1' and tnLevel = 2
    order by tnSort,tnid
  </select>
  <select id="selectNode" resultMap="BaseResultMap" parameterType="map">
    select top ${top}
    <include refid="Base_Column_List" />
    from TreeNode
    where tId = ${tid}
    order by ${order}
  </select>
  <select id="selectByParent" resultMap="BaseResultMap" parameterType="map">
    select ${top} 
    <include refid="Base_Column_List" />
    from TreeNode
    where parent = ${tnid} 
    order by tnSort,tnid
  </select>
  <select id="selectByXpathAndLevel" resultMap="BaseResultMap" parameterType="map">
    select ${top} 
    <include refid="Base_Column_List" />
    from TreeNode
    where tnXpath like ${tnxpath}
    and tnLevel = (select tnLevel from TreeNode where tnId = ${tnid}) + ${tnlevel} 
    and (tnType ='1' or tnType ='3')
    order by tnSort,tnid
  </select>
  <select id="selectByTid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from TreeNode
    where tId = #{tid,jdbcType=INTEGER}
    order by tnSort,tnid
  </select>
  
  <select id="selectInTnid" resultMap="BaseResultMap" parameterType="java.util.List">
    select
    <include refid="Base_Column_List" />
    from TreeNode
    where tnId IN 
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")"> 
		#{item} 
	</foreach>
    order by tnId
  </select>
  
  <select id="searchLevel"  resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from TreeNode
    where tnIsPublic = '1'
    order by tid , parent, tnlevel , tnsort
  </select>
  <select id="selectAllChild" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from TreeNode
    where tnXpath like '${tnid}.%-' and tnIsPublic = '1' 
    order by tnSort,tnid
  </select>
  <select id="selectAllPublic" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from TreeNode 
    where tnIsPublic = '1' 
    order by tnSort,tnid
  </select>
    <select id="selectByTnName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from TreeNode
    where tnName = #{tnname,jdbcType=NVARCHAR}
  </select>
</mapper>